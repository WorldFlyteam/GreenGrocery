@{
Page.Title = "Новая страница";        

var errMSG = "";
var IsValid = true;
var pagenameerror = "";
var pageurlerror = "";
var pagelayouterror = "";
var pagecontenterror = "";
var pagename = Request["pagename"];
var pageurl = Request["pageurl"];
var pagedescr = Request["pagedescr"];
var pageauthor = Request["pageauthor"];
var pagelayout = Request["pagelayout"];
var pagecontent = Request.Unvalidated("pagecontent");

var db = Database.Open("Datebase");


    DirectoryInfo dirInfo = new DirectoryInfo(Server.MapPath("~/Components/Layouts"));
    FileInfo[] fileInfo = dirInfo.GetFiles("_*.cshtml", SearchOption.TopDirectoryOnly  );

    if(IsPost){
        pagename = Request["pagename"];
        if(pagename.IsEmpty()){
            pagenameerror = "Заполните название страницы";
            IsValid = false;
        }
        
        pageurl = Request["pageurl"];
        if(pageurl.IsEmpty()){
            pageurlerror = "У страницы должен быть адрес";
            IsValid = false;
        }

        pagedescr = Request["pagedescr"];
        

        pageauthor = Request["pageauthor"];
        

        pagelayout = Request["pagelayout"];
        if(pagelayout.IsEmpty()){
            pagelayouterror = "Выбирете макет страницы";
            IsValid = false;
        }

        pagecontent = Request.Unvalidated("pagecontent");
        if(pagecontent.IsEmpty()){
            pagecontenterror = "Заполните содержимое страницы";
            IsValid = false;
        }

        var today = DateTime.Now;
        if(IsValid){
        try
             {
                 db.Execute("INSERT into Pages (Name, Content, Date, Url, Layout, Description, Author, Submitted) values (@0, @1, @2, @3, @4, @5, @6, @7)", pagename, pagecontent, today, pageurl, pagelayout, pagedescr, pageauthor, today);
                
                 Response.Redirect("~/Components/Control/PageEdit?id=" + db.GetLastInsertId());
             }
             catch (Exception ex)
             {

                 errMSG = ex.Message.ToString();
             }

    }
    }
}


@errMSG
<form action="@Request.Url" method="post">
    <table>
        <tbody>
            <tr>
                <td class="table-label">
                    <label for="pagename">Название страницы*:</label>
                </td>
                <td>
                    <input required type="text" class="input" id="pagename" name="pagename" value="@pagename"/>
                    @pagenameerror
                </td>
            </tr>
        <tr>
                <td class="table-label">
                    <label for="pageurl">Адрес страницы*:</label>
                </td>
                <td>
                    <span class="form-input-link"><span class="t-link">
            @Request.Url.Scheme://@Request.Url.Authority/</span><input required type="text" id="pageurl" class="input url" name="pageurl" value="@pageurl"/></span>
            @pageurlerror
                </td>
            </tr>
        <tr>
                <td class="table-label">
                    <label for="pagedescr">Описание страницы:</label>
                </td>
                <td>
                    <input type="text"  class="input" id="pagedescr" name="pagedescr" value="@pagedescr"/>
                </td>
            </tr>
        <tr>
                <td class="table-label">
                    <label for="pageauthor">Автор страницы:</label>
                </td>
                <td>
                    <input type="text" class="input" id="pageauthor" name="pageauthor" value="@pageauthor"/>
                </td>
            </tr>
        <tr>
                <td class="table-label">
                    <label for="pagelayout">Макет сраницы*:</label>
                </td>
                <td>
                    <select required id="pagelayout" name="pagelayout">
                @foreach (var f in fileInfo)
               {
                <option value="@Functions.CleanRCNames(f.Name)" >@Functions.CleanRCNames(f.Name)</option>
               }
            </select>
            @pagelayouterror
                </td>
            </tr>
        </tbody>
    
    </table>
    <label class="table-label" for="pagecontent">Содежимое страницы*:</label>
    @pagecontenterror
            <textarea name="pagecontent" style="width:80%;height: 400px;min-width: 400px;">@pagecontent</textarea>
     <input type="submit" class="btn" value="Сохранить"/>
    @*
    <ol>
        <li>
            <label for="pagename">Название страницы*:</label>
            <input type="text" name="pagename" value="@pagename"/>
            @pagenameerror
        </li>
        <li>
            <label for="pageurl">Адрес страницы*:</label>
         
            <span class="form-input-link"><span class="t-link">
            @Request.Url.Scheme://@Request.Url.Authority/</span><input type="text" class="url" name="pageurl" value="@pageurl"/></span>
            @pageurlerror
        </li>
        <li>
            <label for="c">Описание страницы:</label>
            <input type="text" name="pagedescr" value="@pagedescr"/>
        </li>
        <li>
            <label for="pageauthor">Автор страницы:</label>
            <input type="text" name="pageauthor" value="@pageauthor"/>
        </li>
        <li>
            <label for="pagelayout">Макет сраницы*:</label>
            <select  name="pagelayout">
                @foreach (var f in fileInfo)
               {
                <option value="@Functions.CleanRCNames(f.Name)" >@Functions.CleanRCNames(f.Name)</option>
               }
            </select>
            @pagelayouterror
        </li>
        <li>
            <label for="pagecontent">Содежимое страницы*:</label>
            @pagecontenterror
            <textarea name="pagecontent" style="width:80%;height: 400px;min-width: 400px;">@pagecontent</textarea>
        </li>
        <li>
            <input type="submit" class="btn" value="Сохранить"/>
        </li>
    </ol>*@
</form>


<script type="text/javascript" src="~/Components/tinymce/jscripts/tiny_mce/tiny_mce.js"></script>
<script type="text/javascript">
tinyMCE.init({
    mode : "textareas",
    theme : "advanced",
    theme_advanced_buttons1 : "bold,italic,underline,separator,strikethrough,justifyleft,justifycenter,justifyright, justifyfull,bullist,numlist,undo,redo,link,unlink,code,image,fontsizeselect",
    theme_advanced_buttons2 : "",
    theme_advanced_buttons3 : "",
    theme_advanced_toolbar_location : "top",
    theme_advanced_toolbar_align : "left",
    theme_advanced_statusbar_location : "bottom",
    plugins : 'inlinepopups',
    
});
</script>