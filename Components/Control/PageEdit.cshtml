@{
    Page.Title = "Редактирование страницы";

    var pageId = Request["Id"];
    if (pageId == null || pageId.IsEmpty())
    {
        Response.SetStatus(HttpStatusCode.BadRequest);
    }


    var errorm = "";

    var IsValid = true;



    var db = Database.Open("Datebase");

    var data = db.QuerySingle("SELECT * FROM Pages WHERE Id = @0", pageId);

    var today = DateTime.Now;
    var MasterPage = data.Layout;
    DirectoryInfo dirInfo = new DirectoryInfo(Server.MapPath("~/Components/Layouts"));
    FileInfo[] fileInfo = dirInfo.GetFiles("_*.cshtml", SearchOption.TopDirectoryOnly);


    if (IsPost)
    {
        AntiForgery.Validate();
        var pagetitle = Request["pagetitle"];
        if (pagetitle.IsEmpty())
        {

            IsValid = false;
        }


        var pageurl = Request["pageurl"];
        if (pageurl.IsEmpty())
        {

            IsValid = false;
        }

        var pagedescr = Request.Unvalidated("pagedescr");


        var pageauthtor = Request["pageauthtor"];



        var pagecontent = Request.Unvalidated("pagecontent"); // Validation bypassed
        if (pagecontent.IsEmpty())
        {

            IsValid = false;
        }

        var pagelayout = Request["pagelayout"];
        if (pagelayout.IsEmpty())
        {

            IsValid = false;
        }

        /*var submitted = Request["submitted"];
        if(submitted.IsEmpty()){
            submitted = DateTime.Now.Date;
        }*/

        if (IsValid)
        {



            try
            {
                db.Execute("UPDATE Pages SET Name=@0, Content=@1, Date=@2, Url=@3, Layout=@4, Description=@5, Author=@6 WHERE Id=@7 ", pagetitle, pagecontent, today, pageurl, pagelayout, pagedescr, pageauthtor, pageId);
                Response.Redirect("~/Components/Control/PageEdit?id=" + pageId);
            }
            catch (Exception ex)
            {
                errorm = ex.Message.ToString();
            }
        }
    }

}
@section SubMenu{
    <table class="submenu">
        <tr>
            <td>
                <a href="~/Components/Control/AllPages">Все</a>
            </td>
            <td>
                <a href="~/Components/Control/NewPage">Новая</a>
            </td>
            <td class="active">
                <a href="~/Components/Control/PageEdit?Id=@pageId">Редактирование</a>
            </td>
        </tr>
    </table>
}


@errorm
<form id="c-form-page-edit" action="@Request.Url" method="post">
    @AntiForgery.GetHtml()

    <div class="b-form-item required">
        <label for="pagetitle">Название страницы:</label>
        <input id="pagetitle" class="input" type="text" name="pagetitle" value="@data.Name"/>
        <span style="display: none;" class="error error-title"></span>
    </div>
    <div class="b-form-item required">
        <label for="pageurl">Адрес страницы:</label>
        <!--@Request.Url.Scheme://@Request.Url.Authority/-->
        <input id="pageurl" class="input" type="text" name="pageurl" value="@data.Url"/>
        <span style="display: none;" class="error error-uri"></span>
    </div>
    <div class="b-form-item">
        <label for="pageauthtor">Автор страницы:</label>
        <input id="pageauthtor" class="input" type="text" name="pageauthtor" value="@data.Author"/>

    </div>
    <div class="b-form-item required">
        <label for="pagelayout">Макет страницы:</label>
        <select required id="pagelayout" name="pagelayout">
            @foreach (var f in fileInfo)
            {
                <option value="@Functions.CleanRCNames(f.Name)" @if (MasterPage == Functions.CleanRCNames(f.Name))
                                                                {<text>selected="selected"</text>}>@Functions.CleanRCNames(f.Name)</option>
            }
        </select>
    </div>
    <div class="b-form-item">
        <label for="pagedescr">Описание страницы:</label>
        <input id="pagedescr"  class="input" type="text" name="pagedescr" value="@data.Description"/>

    </div>
    <div class="b-form-item required">
        <label for="pagecontent">Содержимое страницы:</label>
        <textarea id="pagecontent" name="pagecontent" style="width: 80%; min-width: 580px;">@data.Content</textarea>
    </div>
    <div class="b-form-button">
        <input type="submit" value="Сохранить" />
    </div>






</form>


<script src="~/Components/CKEditor/ckeditor.js"></script>
<script src="~/Components/CKEditor/styles.js"></script>

<link href="~/Components/CKEditor/skins/moono/editor.css" rel="stylesheet" />
<link href="~/Components/CKEditor/skins/moono/dialog.css" rel="stylesheet" />
<script src="~/Components/ui/js/Control/CKEditor-loader.js"></script>


<script>
    //Валидация полей формы
    var errortext = "Поле обязательно для заполнения";
    var IsValid = false;

    $(function ($) {
        $('#pagetitle').blur(function () {
            var value = $(this).val();
            if (value == "") {
                $(".error-title").show().text(errortext);
                IsValidper = false;
            } else {
                $(".error-title").hide();
                IsValidper = true;
            }
        });

        $('#pageurl').blur(function () {
            var value = $(this).val();
            if (value == "") {
                $(".error-uri").show().text(errortext);
                IsValidper = false;
            } else {
                $(".error-uri").hide();
                IsValidper = true;
            }
        });

        var form = document.getElementById("c-form-page-edit");


        form.onsubmit = function () {
            if (!IsValid) {
                $.jGrowl('Заполните все поля формы');
                return false;
            }
        };
    })
</script>
